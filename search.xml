<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[10月->月末总结]]></title>
      <url>http://yan-1-20.github.io/2016/10/30/2016/10/31/</url>
      <content type="html"><![CDATA[<h1 id="10月-gt-月末总结"><a href="#10月-gt-月末总结" class="headerlink" title="10月-&gt;月末总结"></a>10月-&gt;月末总结</h1><h2 id="0x01-gt-感悟"><a href="#0x01-gt-感悟" class="headerlink" title="　0x01-&gt;感悟"></a>　0x01-&gt;感悟</h2><p>　　　　　这个月是复现cve的第一个月，跟着看了学习了不少知识，不得不说看着大牛的文章学到了很多，分为几个方面，一是调试器的使用，学到了很多新的用法，这是一起没有接触到的，二是这些新鲜的实战利用手法，这是只看二进制基础不可及的，三是对汇编编写、python、js（IE）这些感觉到欠缺,比如在改写虚表和改对象的结构使之rop化的运行等等。</p>
<h2 id="0x02-gt-windbg"><a href="#0x02-gt-windbg" class="headerlink" title="　0x02-&gt;windbg"></a>　0x02-&gt;windbg</h2><p>　　　　　windbg,我是这个月才开始学用，之前一直使用OD（ps:感觉做RE,OD的字符串插件比windbg的用户体验好多了），windbg 的符号功能的确很牛逼，命令行用多了也就记住了，然后就是mona插件，做二进制很强大的插件。</p>
<h3 id="0x02-01-gt-windbg-遇到的问题"><a href="#0x02-01-gt-windbg-遇到的问题" class="headerlink" title="　　0x02-01-&gt;windbg 遇到的问题"></a>　　0x02-01-&gt;windbg 遇到的问题</h3><p>　　　　　1.很多次符号路径莫名的被改变（至今也不知道为什么），导致一直在Busy <br><br><br>　　　　　2.如何快速定位到程序入口, bp $exentry 即可<br><br><br>　　　　　3.为何我的新打开或者附加一个程序会Busy* 很久，这是因为windbg在下载符号<br><br><br>　　　　　4.bp 符号,bm 符号，都不能断下来断点的话，可以先试试x 符号，得到地址，对地址进行断点<br><br><br>　　　　　5.自己编写的程序用windbg调试的时候，在进入main调试源代码的时候，我们的汇编单步会自动变成源码单步，使用 l-t 可以变成汇编单步 ，使用 l+t 变成源码单步<br><br>
　　　　　</p>
<h2 id="0x03-gt-IDA"><a href="#0x03-gt-IDA" class="headerlink" title="　0x03-&gt;IDA"></a>　0x03-&gt;IDA</h2><p>　　　　　IDA这个不用多说，用了很久了比较熟悉，</p>
<h3 id="0x03-01-gt-IDA6-8不能自动加载符号表的问题"><a href="#0x03-01-gt-IDA6-8不能自动加载符号表的问题" class="headerlink" title="　　0x03-01-&gt;IDA6.8不能自动加载符号表的问题"></a>　　0x03-01-&gt;IDA6.8不能自动加载符号表的问题</h3><p>　　　　　我百度到如下解决方法<br><br><br>　　　　　　　　　　原帖地址</p>
<blockquote>
<p><a href="http://www.cnblogs.com/Lnju/articles/5115370.html" target="_blank" rel="external">http://www.cnblogs.com/Lnju/articles/5115370.html</a></p>
</blockquote>
<p>修改ida安装目录下的pdb.cfg文件。<br><br><figure class="highlight"><table><tr><td class="code"><pre><div class="line">// PDB plugin</div><div class="line"></div><div class="line">#ifdef __PC__                           // INTEL 80x86 PROCESSORS</div><div class="line">//</div><div class="line">// The downloaded symbols are stored in the specified directory.</div><div class="line">// Microsoft's public symbol store is used for downloading the symbols.</div><div class="line">//</div><div class="line">// If this option is omitted or empty  - use _NT_SYMBOL_PATH if set, otherwise use %TEMP%\ida directory</div><div class="line">// If the value is not empty           - use it</div><div class="line"></div><div class="line">//PDBSYM_DOWNLOAD_PATH    = "c:\\symbols";</div><div class="line"></div><div class="line">// Full symbol path (in _NT_SYMBOL_PATH format)</div><div class="line">// If set, PDBSYM_DOWNLOAD_PATH and _NT_SYMBOL_PATH are ignored</div><div class="line">PDBSYM_SYMPATH =</div><div class="line">//把下面这行的注释去掉，改成自己的本地符号路径就好了</div><div class="line">"SRV*e:\\sym*http://symbols.mozilla.org/firefox;SRV*c:\\symbols*http://msdl.microsoft.com/download/symbols";</div><div class="line"></div><div class="line">// remote server where win32_remote.exe is running</div><div class="line">// used when loading PDB symbols on non-Windows platforms</div><div class="line">// NB: it will be used only if there is not already an existing debugging session started</div><div class="line">PDB_REMOTE_SERVER = "localhost";</div><div class="line">PDB_REMOTE_PORT   = 23946</div><div class="line">// password for the remote server</div><div class="line">PDB_REMOTE_PASSWD = "";</div><div class="line"></div><div class="line">#endif</div></pre></td></tr></table></figure><br></p>
<h3 id="0x03-02-gt-IDA-遇上ASLR-怎么动静结合问题"><a href="#0x03-02-gt-IDA-遇上ASLR-怎么动静结合问题" class="headerlink" title="　　0x03-02-&gt;IDA 遇上ASLR 怎么动静结合问题"></a>　　0x03-02-&gt;IDA 遇上ASLR 怎么动静结合问题</h3><p>　　　　　IDA加载文件的时候选Manualload打勾.然后手动指定imagebase你可以看下你动态载入后的IMAGEBASE是多少先.然后把IDA的手工指定基址到中动态的那个基址。</p>
<h2 id="0x04-gt-Exploit"><a href="#0x04-gt-Exploit" class="headerlink" title="　0x04-&gt;Exploit"></a>　0x04-&gt;Exploit</h2><p>　　　　　这个月复现的cve,只有buffoverflow，Heap，都是溢出覆盖型基本利用手法就是<br><br>　　　　　1.找到溢出点，（heap，用gflag开堆页）<br><br>　　　　　2.查看模块的保护，找未开保护的模块，跳到其中去执行想要的gadget(确实不一定绕过DEP才用这种手法，很多情况都可以使用rop,比如自己构造对象,修改其虚函数，)<br>　　　　　3.由审计反汇编代码，查看是否有检查（输入数据）的地方，绕过其检查，保证程序正确执行<br>　　　　　4.由上面三步收集的信息,构造exploit</p>
<p>(╭￣3￣)╭♡<br><br>(╭￣3￣)╭♡<br><br>(╭￣3￣)╭♡<br></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[windbg 中使用kb和ub命令查看函数调用层次关系]]></title>
      <url>http://yan-1-20.github.io/2016/10/07/2016/10/7/</url>
      <content type="html"><![CDATA[<h1 id="kb-ub命令的作用"><a href="#kb-ub命令的作用" class="headerlink" title="kb,ub命令的作用"></a>kb,ub命令的作用</h1><p>  　　　　kb 显示传递给堆栈回溯中的每个函数的前三个参数<br><br>  　　　　ub 向前反汇编<br></p>
<h1 id="列子"><a href="#列子" class="headerlink" title="列子"></a>列子</h1><p><img src="/image/2016/10/07/2016-10-07-01.png" alt=""><br>　　　　　如图异常在30ed442c 这个地址，重新加载windbg，在这个地址下断<br><br>　　　　　断下来后，我们执行kb命令<br></p>
<p><img src="/image/2016/10/07/2016-10-07-02.png" alt=""><br>　　　　　mso!Ordinal1246+0x16b0表示当前指令的地址，则下面的表示调用当前指令<br><br>　　　　　的所在函数的<br>　　　　　对mso!Ordinal1273+0x2581执行我们的ub命令得到如下图<br><img src="/image/2016/10/07/2016-10-07-03.png" alt=""><br>　　　　　为什么是ub，相信你看了?  30f0b566 +5就明白了，所以这个<br><br>　　　　　mso!Ordinal1273+0x25d8(30f0b5c2)就是我们的调用当前函数的函数<br><br>　　　　　在这个30f0b5c2 下断点在次重新加载windbg<br><br><img src="/image/2016/10/07/2016-10-07-03.png" alt=""><br>　　　　　单步跟进，我们会看见这个call，这个call的地址，</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[全国网安高校联赛2016两道linux逆向的writeup]]></title>
      <url>http://yan-1-20.github.io/2016/10/03/2016/8/29/</url>
      <content type="html"><![CDATA[<h1 id="全国网安高校联赛2016两道linux逆向的writeup"><a href="#全国网安高校联赛2016两道linux逆向的writeup" class="headerlink" title="全国网安高校联赛2016两道linux逆向的writeup"></a>全国网安高校联赛2016两道linux逆向的writeup</h1><p>　　忏愧一下午就憋出了两道题<br><br>　　一道320分的　babyfuscator<br><br>　　一道192分的　indirect<br><br>　　这两道题indirect好像题目有问题最后加减i的时候位置反了，然后都没什么问题，babyfuscator是道体力活，indirect是道底层大题。<br><br>　　链接如下：<br><br>　　babyfuscator 　链接：<a href="http://pan.baidu.com/s/1i48aQ37" target="_blank" rel="external">http://pan.baidu.com/s/1i48aQ37</a> 密码：xiht<br><br>　　indirect　　　　链接：<a href="http://pan.baidu.com/s/1c131qKw" target="_blank" rel="external">http://pan.baidu.com/s/1c131qKw</a> 密码：q3br</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[windbg 添加 mona]]></title>
      <url>http://yan-1-20.github.io/2016/10/03/2016/8/22/</url>
      <content type="html"><![CDATA[<p>　　Mona2是Corelan Team团队开发的一个非常有用的扩展(PS:读过Corelan Team的Exploit 编写系列教程应该不会陌生吧,看雪论坛里面有泉哥他们翻译的中文版),该扩展最初是为Immunity Debugger编写的,现在该扩展也有WinDbg的版本了.<br><br>下面的安装以win7 64位系统为例演示:<br><br></p>
<p>1.安装Python2.7<br><br>Python2.7下载地址:<br><br><a href="https://www.python.org/downloads/" target="_blank" rel="external">https://www.python.org/downloads/</a>)<br><br><br>2.安装vcredist_x64.exe (VC++运行库).<br></p>
<p>vcredist_x86.exe下载地址:<br> <a href="https://www.microsoft.com/en-us/download/details.aspx?id=29" target="_blank" rel="external">https://www.microsoft.com/en-us/download/details.aspx?id=29</a></p>
<p>vcredist_x64.exe下载地址:<br><br><a href="https://www.microsoft.com/en-us/download/details.aspx?id=15336" target="_blank" rel="external">https://www.microsoft.com/en-us/download/details.aspx?id=15336</a><br><br><br><br>3.下载并安装让WinDbg支持python脚本的插件(按照自己的需要安装x86和x64版本的).<br></p>
<p>下载地址: <a href="http://pykd.codeplex.com/releases" target="_blank" rel="external">http://pykd.codeplex.com/releases</a><br><img src="/image/2016/08/22/2016-08-22-1.jpg" alt=""><br><br><br><br><br><img src="/image/2016/08/22/2016-08-22-2.jpg" alt=""><br><br><br><br><br><img src="/image/2016/08/22/2016-08-22-3.jpg" alt=""><br><br><br>zip解压之后得到几个dll 和一个pykd.pyd文件<br><img src="/image/2016/08/22/2016-08-22-4.jpg" alt=""><br><br><br>把pykd.pyd文件放入 windb的安装目录下的 winext文件下<br><br>然后 进入cmd  cd /d  xxxx（pykd的zip解压文件路径）<br><br>接着输入 regsvr32 msdia120.dll    （注意msdia120.dll是pykd 解压文件内的一个dll它的名字随pykd版本改变而改变 如上面的版本为msdia120.dll）</p>
<p>（注意！！在win7等有权限要求的系统，注册的时候要用管理员权限打开cmd,而且要注意windbg符号文件夹是否被创建，写符号文件路径的时候最好也是管理员权限运行）</p>
<p><br><br>注册成功后如图<br><img src="/image/2016/08/22/2016-08-22-5.jpg" alt=""></p>
<p>4．下载windbglib.py和mona.py,将其放到windbg.exe所在目录下.</p>
<p>下载地址: <a href="https://github.com/corelan" target="_blank" rel="external">https://github.com/corelan</a></p>
<p>5.配置符号文件路径如下:</p>
<p>①  选择菜单项File-&gt;Symbol File Path</p>
<p>②  输入:<br><br><figure class="highlight ruby"><table><tr><td class="code"><pre><div class="line">SRV*<span class="symbol">D:</span>\symbols*<span class="symbol">http:</span>/<span class="regexp">/msdl.microsoft.com/download</span><span class="regexp">/symbols</span></div></pre></td></tr></table></figure><br>上面的  D:\symbols 是自己想要的符号文件夹的路径<br></p>
<p>③  保存工作空间(选择菜单项File-&gt;Save Workspace)</p>
<p><br><br><br><br><br>/////////<br><br>说了这么多，我来个比较gay的，假如已经安装了python2.7，和下载windbglib.py和mona.py<br><br>你直接去: <a href="http://pykd.codeplex.com/releases" target="_blank" rel="external">http://pykd.codeplex.com/releases</a><br><br><img src="/image/2016/08/22/2016-08-22-6.png" alt=""><br>下载版本PYKD 0.2.0.29，选择pykd-0.2.0.29-x86-python-2.7-setup.exe(32位的)<br><br>这个玩意是一键安装的<br><br><br>　　　　　　　　　　　　(╭￣3￣)╭♡<br><br><br></p>
<p>#在WinDbg下使用mona.py</p>
<p>在WinDbg中运行mona.py非常简单:<br>先用windbg打开一个可执行文件打开 command 窗口 输入命令</p>
<p>.load pykd.pyd        ///（加载pykd扩展命令）<br><br>!py mona              </p>
<p><img src="/image/2016/08/22/2016-08-22-7.jpg" alt=""></p>
<p><br><br><br></p>
<p>再输入一句 更新语句<br><br><br>!py mona update</p>
<p><br><br>到此mnoa的安装完成</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[windbg kb 命令解释]]></title>
      <url>http://yan-1-20.github.io/2016/10/03/2016/8/18/</url>
      <content type="html"><![CDATA[<p>　　windbg的kb命令执行后会得到如下的数据<br><br>　　<img src="/image/2016/08/18/kb.jpg" alt=""><br><br>　　同时源代码的函数调用如下图<br><br>　　<img src="/image/2016/08/18/c_code.jpg" alt=""><br><br>　　可以看出<br></p>
<p>0012fe7c 0040109d 0012ff28 00edf7ae 7ffda000 111!d<br><br>0040109d是函数 111!d 执行后最后ret的地址</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubantu 常见问题解决]]></title>
      <url>http://yan-1-20.github.io/2016/10/03/2016/7/2/</url>
      <content type="html"><![CDATA[<p>ubantu 备份 system<br><br><a href="http://www.cnblogs.com/samael/articles/2033568.html" target="_blank" rel="external">http://www.cnblogs.com/samael/articles/2033568.html</a><br><br></p>
<p>install  notepadqq<br><br><a href="http://www.ubuntukylin.com/news/shownews.php?lang=cn&amp;id=356" target="_blank" rel="external">http://www.ubuntukylin.com/news/shownews.php?lang=cn&amp;id=356</a></p>
<p>install vmware<br><br><a href="https://linux.cn/article-2449-1.html" target="_blank" rel="external">https://linux.cn/article-2449-1.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PWN运动的工具准备]]></title>
      <url>http://yan-1-20.github.io/2016/06/28/2016/6/28/</url>
      <content type="html"><![CDATA[<p>pwn tools  install<br><br><a href="http://blog.csdn.net/koozxcv/article/details/51644476" target="_blank" rel="external">http://blog.csdn.net/koozxcv/article/details/51644476</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubantu和windows10 双系统下问题解决]]></title>
      <url>http://yan-1-20.github.io/2016/06/16/2016/6/22/</url>
      <content type="html"><![CDATA[<p>#ubantu和windows10 双系统下问题解决<br>最近装了ubantu，但是双系统的麻烦也来了<br>1.windows和ubantu的时区冲突两个系统时间差了8小时<br>2.unbantu下没有声音</p>
<p>解决方法<br>1.<br>时区不对怎么办<br>下面的命令可以关闭UTC，<br>代码:<br>sudo timedatectl set-local-rtc 1</p>
<p>2.<br>耳机没声音怎么办<br>2.运行<br>代码:<br>sudo mousepad /etc/modprobe.d/options<br>在其中加入<br>options snd-hda-intel model=z71v position_fix=1<br>保存，退出。</p>
]]></content>
    </entry>
    
  
  
</search>
